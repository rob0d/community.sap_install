---
# Variables containing variables must be constructed with values
# to be fed into the included ha_cluster role

# - put here all scale-up and scale-out common resources
# - certain differences like ra agent names are provided through
#   type specific variables

# TODO: add conditionals to verify that the same resource agent is not already
#       defined in user input variables. Conflicting user input should take precedence.


- name: "SAP HA Prepare Pacemaker - Add resource: Filesystem /usr/sap/<<SID>>/W<<Instance_WDP>>"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_primitives: "{{ __sap_ha_pacemaker_cluster_resource_primitives + [__resource_filesystem] }}"
  vars:
    __resource_filesystem:
      id: "{{ sap_ha_pacemaker_cluster_wdp_filesystem_resource_name }}"
      agent: "ocf:heartbeat:Filesystem"
      instance_attrs:
        - attrs:
            - name: device
              value: "{{ sap_ha_pacemaker_cluster_wdp_filesystem_host_mount_path }}"
            - name: directory
              value: "{{ sap_ha_pacemaker_cluster_wdp_filesystem_local_mount_path }}"
            - name: fstype
              value: "{{ sap_ha_pacemaker_cluster_wdp_filesystem_fstype }}"
            - name: options
              value: "{{ sap_ha_pacemaker_cluster_wdp_filesystem_options_string }}"
            - name: force_unmount
              value: "{{ sap_ha_pacemaker_cluster_wdp_filesystem_force_unmount }}"
      operations:
        - action: start
          attrs:
            - name: interval
              value: 0
            - name: timeout
              value: 60
        - action: stop
          attrs:
            - name: interval
              value: 0
            - name: timeout
              value: 120
        - action: monitor
          attrs:
            - name: interval
              value: 200
            - name: timeout
              value: 40
  when:
    - __resource_filesystem.id not in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id'))

- name: "SAP HA Prepare Pacemaker - Add resource: SAPInstance for SAP Web Dispatcher"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_primitives: "{{ __sap_ha_pacemaker_cluster_resource_primitives + [__resource_sapinstance] }}"
  vars:
    __resource_sapinstance:
      id: "{{ sap_ha_pacemaker_cluster_wdp_sapinstance_resource_name }}"
      agent: "ocf:heartbeat:SAPInstance"
      instance_attrs:
        - attrs:
            - name: InstanceName
              value: "{{ sap_ha_pacemaker_cluster_wdp_sapinstance_instance_name }}"
            - name: START_PROFILE
              value: "{{ sap_ha_pacemaker_cluster_wdp_sapinstance_start_profile_string }}"
            - name: AUTOMATIC_RECOVER
              value: "{{ sap_ha_pacemaker_cluster_wdp_sapinstance_automatic_recover_bool | string }}"
            - name: MONITOR_SERVICES
              value: sapwebdisp
      meta_attrs:
        - attrs:
            - name: resource-stickiness
              value: "{{ sap_ha_pacemaker_cluster_wdp_sapinstance_resource_stickiness }}"
            # - name: migration-threshold
            #   value: "{{ sap_ha_pacemaker_cluster_wdp_sapinstance_migration_threshold }}"
            # - name: failure-timeout
            #   value: "{{ sap_ha_pacemaker_cluster_wdp_sapinstance_failure_timeout }}"
      operations:
        - action: start
          attrs:
            - name: interval
              value: 0
            - name: timeout
              value: 600
        - action: stop
          attrs:
            - name: interval
              value: 0
            - name: timeout
              value: 600
        - action: monitor
          attrs:
            - name: interval
              value: 20
            - name: on-fail
              value: restart
            - name: timeout
              value: 60
  when:
    - __resource_sapinstance.id not in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id'))

### Groups
# WebDisp group consists of resources in this order:
# - WebDisp filesystem
# - WebDisp VIP
# - WebDisp instance
# NOTE: WebDisp VIP must start before WebDisp instance as the generally binds to the VIP and will fail if the VIP is not available

- name: "SAP HA Prepare Pacemaker - Add resource group for WebDisp resources"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_groups: "{{ __sap_ha_pacemaker_cluster_resource_groups + [__webdisp_group] }}"
  vars:
    __webdisp_group:
      id: "{{ sap_ha_pacemaker_cluster_vip_wdp_resource_group_name }}"
      resource_ids: |
        {% set resource_ids_list = [] %}
        {%- for resource in
          sap_ha_pacemaker_cluster_wdp_filesystem_resource_name,
          sap_ha_pacemaker_cluster_vip_wdp_resource_name,
          sap_ha_pacemaker_cluster_wdp_sapinstance_resource_name,
          sap_ha_pacemaker_cluster_healthcheck_wdp_resource_name %}
          {%- if resource | length > 0
            and resource in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id')) %}
            {%- set ids = resource_ids_list.append(resource) %}
          {%- endif %}
        {%- endfor %}
        {{ resource_ids_list }}
      meta_attrs:
        - attrs:
            - name: resource-stickiness
              value: "{{ sap_ha_pacemaker_cluster_wdp_group_stickiness }}"
  when:
    - __webdisp_group.id is not in (__sap_ha_pacemaker_cluster_resource_groups | map(attribute='id'))
